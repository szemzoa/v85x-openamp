# Target
TARGET = v851s-riscv-firmware
TOPDIR=$(shell pwd)

# Build revision
BUILD_REVISION_H = "build_revision.h"
BUILD_REVISION_D = "BUILD_REVISION"

SRCS +=  main.c rsc_table.c
ASRCS +=

INCLUDE_DIRS += -I ./ -I ./utils
LIB_DIR=
LIBS= -lm

CFLAGS += -Wall -std=gnu99 -Os -mabi=ilp32d --specs=nosys.specs -march=rv32imafdcxthead -mcmodel=medany -g $(INCLUDE_DIRS) $(DEFINES)-nostartfiles -DCONFIG_ARCH_RISCV_FPU -DCONFIG_FPU_DOUBLE

include arch/arch.mk
include utils/utils.mk
include openamp/openamp.mk

ASFLAGS += $(CFLAGS) -D__ASSEMBLY__
LDFLAGS += $(CFLAGS) $(LIBS)

STRIP=riscv64-unknown-elf-strip
CC=riscv64-unknown-elf-gcc
SIZE=riscv64-unknown-elf-size
OBJCOPY=riscv64-unknown-elf-objcopy
HOSTCC=gcc
HOSTSTRIP=strip
DATE=/bin/date
CAT=/bin/cat
ECHO=/bin/echo
WORKDIR=$(/bin/pwd)
MAKE=make
OPENOCD = openocd

# Objects
EXT_OBJS =
BUILD_OBJS = $(SRCS:.c=.o)
BUILD_OBJSA = $(ASRCS:.S=.o)
OBJS = $(BUILD_OBJS) $(BUILD_OBJSA) $(EXT_OBJS)

all: begin build_revision build

begin:
	@echo "---------------------------------------------------------------"
	@echo -n "Compiler version: "
	@$(CC) -v 2>&1 | tail -1

build_revision:
	@/usr/bin/expr `/bin/cat .build_revision` + 1 > .build_revision
	@echo "// Generated by make, DO NOT EDIT" > $(BUILD_REVISION_H)
	@echo "#ifndef __$(BUILD_REVISION_D)_H__" >> $(BUILD_REVISION_H)
	@echo "#define $(BUILD_REVISION_D)" `/bin/cat .build_revision` >> $(BUILD_REVISION_H)
	@echo "#endif" >> $(BUILD_REVISION_H)
	@echo "Build revision:" `/bin/cat .build_revision`
	@echo "---------------------------------------------------------------"

.SILENT:

build: $(TARGET).elf $(TARGET).bin
	$(STRIP) $(TARGET).elf

.SECONDARY : $(TARGET)
.PRECIOUS : $(OBJS)
$(TARGET).elf: $(OBJS)
	echo "  LD    $@"
	$(CC) $^ -o $@ $(LIB_DIR) $(LIBS) $(LDFLAGS) -Wl,-Map,$(TARGET).map

$(TARGET).bin: $(TARGET).elf
	@echo OBJCOPY $@
	$(OBJCOPY) -O binary $< $@
	$(SIZE) $(TARGET).elf

%.o : %.c
	echo "  CC    $<"
	$(CC) $(CFLAGS) -c $< -o $@ $(INCLUDE_DIRS)

%.o : %.S
	echo "  CC    $<"
	$(CC) $(ASFLAGS) -c $< -o $@ $(INCLUDE_DIRS)

clean:
	echo "RM  $(OBJS)"
	rm -f $(OBJS)
	rm -f *.o
	echo "  CC    $<"
	rm -f $(TARGET)
	rm -f $(TARGET).bin
	rm -f $(TARGET).map
	rm -f $(TARGET).elf
	rm -f .deps
	rm -f .dep/*.d

program:
	$(OPENOCD) -f ./openocd.conf

-include $(shell mkdir .dep 2>/dev/null) $(wildcard .dep/*)
